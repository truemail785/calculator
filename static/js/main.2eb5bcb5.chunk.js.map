{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","input","calculation","handleClick","bind","handleOperator","handleClear","handleDecimal","handleEqual","this","setState","arg","length","includes","concat","ope","endsWith","slice","test","tempi","match","tempc","String","eval","className","id","onClick","React","Component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iuCAGMA,I,oVACJ,aAAYC,GAAO,IAAD,kKAChB,mBAAMA,IACDC,MAAQ,CACXC,MAAO,IACPC,YAAa,QAEf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,yJACnB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,yJACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,yJACnB,EAAKG,cAAe,EAAKA,cAAcH,KAAnB,yJACpB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,yJAVH,E,2LAalBK,KAAKC,SAAS,CAACT,MAAO,IAAIC,YAAa,W,kCAG3BS,GACPF,KAAKT,MAAMC,MAAMW,OAAO,KACH,MAAnBH,KAAKT,MAAMC,OAAaQ,KAAKT,MAAME,YAAYW,SAAS,KACzDJ,KAAKC,SAAS,CAACT,MAAOU,EAAKT,YAAYS,IAEvCF,KAAKC,SAAS,CAACT,MAAOQ,KAAKT,MAAMC,MAAMa,OAAOH,GAAKT,YAAaO,KAAKT,MAAME,YAAYY,OAAOH,Q,qCAIrFI,GACG,CAAC,IAAI,KACRF,SAASE,IAA8B,QAAxBN,KAAKT,MAAME,YACrCO,KAAKC,SAAS,CAACT,MAAOc,EAAIb,YAAaa,IAEjCN,KAAKT,MAAME,YAAYW,SAAS,KACtCJ,KAAKC,SAAS,CAACT,MAAOQ,KAAKT,MAAMC,MAAMc,EAAIb,YAAaO,KAAKT,MAAMC,MAAMc,IAEnEN,KAAKT,MAAMC,MAAMe,SAAS,MAAMP,KAAKT,MAAMC,MAAMe,SAAS,MAAMP,KAAKT,MAAMC,MAAMe,SAAS,MAAMP,KAAKT,MAAMC,MAAMe,SAAS,KAChIP,KAAKC,SAAS,CAACT,MAAOQ,KAAKT,MAAMC,MAAMgB,MAAM,EAAER,KAAKT,MAAMC,MAAMW,OAAO,GAAGE,OAAOC,GAC9Eb,YAAaO,KAAKT,MAAME,YAAYe,MAAM,EAAER,KAAKT,MAAME,YAAYU,OAAO,GAAGE,OAAOC,KAChF,MAAMG,KAAKT,KAAKT,MAAMC,QAAQ,MAAMiB,KAAKT,KAAKT,MAAME,cAC3DO,KAAKC,SAAS,CAACT,MAAOQ,KAAKT,MAAMC,MAAMa,OAAOC,GAAKb,YAAaO,KAAKT,MAAME,YAAYY,OAAOC,O,sCAIhG,GAAG,MAAMG,KAAKT,KAAKT,MAAMC,QAAQ,MAAMiB,KAAKT,KAAKT,MAAME,eAAeO,KAAKT,MAAME,YAAYW,SAAS,KAAK,CACzG,IAAIM,EAAQV,KAAKT,MAAMC,MAAMmB,MAAM,WAC/BC,EAAQZ,KAAKT,MAAME,YAAYkB,MAAM,WACrCD,EAAMA,EAAMP,OAAO,GAAGC,SAAS,MAAOQ,EAAMA,EAAMT,OAAO,GAAGC,SAAS,MACzEJ,KAAKC,SAAS,CAACT,MAAOQ,KAAKT,MAAMC,MAAMa,OAAO,KAAKZ,YAAaO,KAAKT,MAAME,YAAYY,OAAO,U,gDAK5FL,KAAKT,MAAME,YAAYW,SAAS,MAC/B,MAAMK,KAAKT,KAAKT,MAAMC,QAAQ,MAAMiB,KAAKT,KAAKT,MAAME,cACrDO,KAAKC,SAAS,CAACT,MAAOqB,OAAOC,KAAKd,KAAKT,MAAMC,QAAQC,YAAaO,KAAKT,MAAME,YAAY,MAAMoB,OAAOC,KAAKd,KAAKT,MAAME,kB,+BAKnH,IAAD,OACN,OACE,kEAAKsB,UAAY,aACf,kEAAKA,UAAY,cACf,kEAAKA,UAAY,WACf,gEAAGC,GAAK,eAAehB,KAAKT,MAAME,aAClC,gEAAGuB,GAAK,SAAShB,KAAKT,MAAMC,QAG9B,kEAAKuB,UAAY,WACf,qEAAQE,QAAWjB,KAAKH,YAAamB,GAAK,SAA1C,MACA,qEAAQC,QAAW,WAAK,EAAKrB,eAAe,MAAOoB,GAAK,UAAxD,KACA,qEAAQC,QAAW,WAAK,EAAKrB,eAAe,MAAOoB,GAAK,YAAxD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,SAArD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,SAArD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,QAArD,KACA,qEAAQC,QAAW,WAAK,EAAKrB,eAAe,MAAOoB,GAAK,YAAxD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,QAArD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,QAArD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,OAArD,KACA,qEAAQC,QAAW,WAAK,EAAKrB,eAAe,MAAOoB,GAAK,OAAxD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,OAArD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,OAArD,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,SAArD,KACA,qEAAQC,QAAWjB,KAAKD,YAAaiB,GAAK,UAA1C,KACA,qEAAQC,QAAW,WAAK,EAAKvB,YAAY,MAAOsB,GAAK,QAArD,KACA,qEAAQC,QAAWjB,KAAKF,cAAekB,GAAK,WAA5C,OAGJ,gEAAGA,GAAK,WAAR,oC,KAvFUE,6CAAMC,WA6FT9B,2B,oKCpFK+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASZ,MACvB,2DCZNa,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACrC,EAAA,EAAD,OAEFsC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2eb5bcb5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      input: \"0\",\n      calculation: \"null\"\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleOperator = this.handleOperator.bind(this)\n    this.handleClear = this.handleClear.bind(this)\n    this.handleDecimal =this.handleDecimal.bind(this)\n    this.handleEqual = this.handleEqual.bind(this)\n  }\nhandleClear(){\n  this.setState({input: \"0\",calculation: \"null\"})\n}\n\n  handleClick(arg){\n    if(this.state.input.length<17){\n      if(this.state.input===\"0\"||this.state.calculation.includes(\"=\")){\n        this.setState({input: arg, calculation:arg})\n      }else{\n        this.setState({input: this.state.input.concat(arg),calculation: this.state.calculation.concat(arg)})\n      }\n    }\n  }\n  handleOperator(ope){\n    let plusminus = [\"+\",\"-\"]\n    if(plusminus.includes(ope)&&this.state.calculation==\"null\"){\n      this.setState({input: ope,calculation: ope})\n    }\n    else if(this.state.calculation.includes('=')){\n      this.setState({input: this.state.input+ope,calculation: this.state.input+ope})\n    }\n    else if(this.state.input.endsWith(\"-\")||this.state.input.endsWith(\"+\")||this.state.input.endsWith(\"/\")||this.state.input.endsWith(\"*\")){\n      this.setState({input: this.state.input.slice(0,this.state.input.length-1).concat(ope)\n        ,calculation: this.state.calculation.slice(0,this.state.calculation.length-1).concat(ope)})\n    }else if(/\\d$/.test(this.state.input)&&/\\d$/.test(this.state.calculation)){\n      this.setState({input: this.state.input.concat(ope),calculation: this.state.calculation.concat(ope)}) \n    }\n  }\n  handleDecimal(){\n    if(/\\d$/.test(this.state.input)&&/\\d$/.test(this.state.calculation)&&!this.state.calculation.includes(\"=\")){\n      let tempi = this.state.input.match(/[\\d.]+/g)\n      let tempc = this.state.calculation.match(/[\\d.]+/g)\n      if(!tempi[tempi.length-1].includes(\".\")&&!tempc[tempc.length-1].includes(\".\")){\n      this.setState({input: this.state.input.concat(\".\"),calculation: this.state.calculation.concat(\".\")})\n      }\n    }\n  }\n  handleEqual(){\n    if(!this.state.calculation.includes(\"=\")){\n      if(/\\d$/.test(this.state.input)&&/\\d$/.test(this.state.calculation)){\n        this.setState({input: String(eval(this.state.input)),calculation: this.state.calculation+\" = \"+String(eval(this.state.calculation))})\n      }\n    }\n  }\n\n  render(){\n    return (\n      <div className = \"container\">\n        <div className = \"calculator\">\n          <div className = \"display\">\n            <p id = \"calculation\">{this.state.calculation}</p>\n            <p id = \"input\">{this.state.input}</p>\n          </div>\n\n          <div className = \"buttons\">\n            <button onClick = {this.handleClear} id = \"clear\">AC</button>\n            <button onClick = {()=>{this.handleOperator(\"/\")}} id = \"devide\">/</button>\n            <button onClick = {()=>{this.handleOperator(\"*\")}} id = \"multiply\">X</button>\n            <button onClick = {()=>{this.handleClick(\"7\")}} id = \"seven\">7</button>\n            <button onClick = {()=>{this.handleClick(\"8\")}} id = \"eight\">8</button>\n            <button onClick = {()=>{this.handleClick(\"9\")}} id = \"nine\">9</button>\n            <button onClick = {()=>{this.handleOperator(\"-\")}} id = \"subtract\">-</button>\n            <button onClick = {()=>{this.handleClick(\"4\")}} id = \"four\">4</button>\n            <button onClick = {()=>{this.handleClick(\"5\")}} id = \"five\">5</button>\n            <button onClick = {()=>{this.handleClick(\"6\")}} id = \"six\">6</button>\n            <button onClick = {()=>{this.handleOperator(\"+\")}} id = 'add'>+</button>\n            <button onClick = {()=>{this.handleClick(\"1\")}} id = \"one\">1</button>\n            <button onClick = {()=>{this.handleClick(\"2\")}} id = \"two\">2</button>\n            <button onClick = {()=>{this.handleClick(\"3\")}} id = \"three\">3</button>\n            <button onClick = {this.handleEqual} id = \"equals\">=</button>\n            <button onClick = {()=>{this.handleClick(\"0\")}} id = \"zero\">0</button>\n            <button onClick = {this.handleDecimal} id = \"decimal\">.</button>\n          </div>\n        </div>\n        <p id = \"regards\">Designed And Coded By Ozair</p>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}